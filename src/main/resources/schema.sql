CREATE TABLE IF NOT EXISTS PUBLIC."USER" (
	USER_ID INTEGER NOT NULL AUTO_INCREMENT,
	EMAIL CHARACTER VARYING NOT NULL,
	LOGIN CHARACTER VARYING NOT NULL,
	NAME CHARACTER VARYING,
	BIRTH DATE,
	CONSTRAINT USER_PK PRIMARY KEY (USER_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS USER_ID_PK ON PUBLIC."USER" (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.MPA_RATING (
	MPA_RATING_ID INTEGER AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT MPA_RATING_PK PRIMARY KEY (MPA_RATING_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS MPA_RATING_ID_PK ON PUBLIC.MPA_RATING (MPA_RATING_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM (
	FILM_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING NOT NULL,
	DESCRIPTION CHARACTER VARYING,
	RELEASE_DATE DATE,
	DURATION INTEGER,
	MPA_RATING_ID INTEGER,
	MPA_RATING CHARACTER VARYING,
	CONSTRAINT FILM_PK PRIMARY KEY (FILM_ID),
	CONSTRAINT FILM_FK FOREIGN KEY (MPA_RATING_ID) REFERENCES PUBLIC.MPA_RATING(MPA_RATING_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE INDEX IF NOT EXISTS FILM_FK_MPA_RATING ON PUBLIC.FILM (MPA_RATING_ID);
CREATE UNIQUE INDEX IF NOT EXISTS FILM_ID_PK ON PUBLIC.FILM (FILM_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.GENRE (
	GENRE_ID INTEGER NOT NULL AUTO_INCREMENT,
	NAME CHARACTER VARYING,
	CONSTRAINT GENRE_PK PRIMARY KEY (GENRE_ID)
);
CREATE UNIQUE INDEX IF NOT EXISTS GENRE_ID_PK ON PUBLIC.GENRE (GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.FILM_GENRE (
	FILM_ID INTEGER,
	GENRE_ID INTEGER,
	CONSTRAINT FILM_GENRE_PK PRIMARY KEY (FILM_ID,GENRE_ID),
	CONSTRAINT FILM_GENRE_FK FOREIGN KEY (GENRE_ID) REFERENCES PUBLIC.GENRE(GENRE_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT FILM_GENRE_FK1 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS FILM_ID_GENRE_ID_PK ON PUBLIC.FILM_GENRE (FILM_ID, GENRE_ID);
CREATE INDEX IF NOT EXISTS FILM_GENRE_FK1_FILM ON PUBLIC.FILM_GENRE (FILM_ID);
CREATE INDEX IF NOT EXISTS FILM_GENRE_FK_GENRE ON PUBLIC.FILM_GENRE (GENRE_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.USER_LIKE (
	USER_ID INTEGER,
	FILM_ID INTEGER,
	CONSTRAINT USER_LIKE_PK PRIMARY KEY (USER_ID,FILM_ID),
	CONSTRAINT USER_LIKE_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT USER_LIKE_FK1 FOREIGN KEY (FILM_ID) REFERENCES PUBLIC.FILM(FILM_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS USER_ID_FILM_ID_PK ON PUBLIC.USER_LIKE (USER_ID,FILM_ID);
CREATE INDEX IF NOT EXISTS USER_LIKE_FK1_FILM ON PUBLIC.USER_LIKE (FILM_ID);
CREATE INDEX IF NOT EXISTS USER_LIKE_FK_USER ON PUBLIC.USER_LIKE (USER_ID);

CREATE TABLE IF NOT EXISTS PUBLIC.USER_FRIEND (
	USER_ID INTEGER,
	USER_FRIEND_ID INTEGER,
	CONSTRAINT USER_FRIEND_PK PRIMARY KEY (USER_ID,USER_FRIEND_ID),
	CONSTRAINT USER_FRIEND_FK FOREIGN KEY (USER_ID) REFERENCES PUBLIC."USER"(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT,
	CONSTRAINT USER_FRIEND_FK1 FOREIGN KEY (USER_FRIEND_ID) REFERENCES PUBLIC."USER"(USER_ID) ON DELETE RESTRICT ON UPDATE RESTRICT
);
CREATE UNIQUE INDEX IF NOT EXISTS USER_ID_USER_FRIEND_ID_PK ON PUBLIC.USER_FRIEND (USER_ID,USER_FRIEND_ID);
CREATE INDEX IF NOT EXISTS USER_FRIEND_FK1_USER ON PUBLIC.USER_FRIEND (USER_FRIEND_ID);
CREATE INDEX IF NOT EXISTS USER_FRIEND_FK_USER ON PUBLIC.USER_FRIEND (USER_ID);
